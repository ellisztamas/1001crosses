---
title: "GWAS statistics: flowering time"
author: "Tom Ellis"
date: today
format:
  html:
    toc: true
---

```{r setup, echo=FALSE}
knitr::opts_chunk$set(echo = FALSE, cache = TRUE, cache.lazy=TRUE)
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())

suppressPackageStartupMessages(library(tidyverse))
library(ggpubr)
# library(here)

# here::i_am("05_results/16_gemma_ft12/04_gwas_statistics.qmd")
```

```{r load-data}
source("02_library/manhattan_plot.R")


# Vector of GEMMA output files.
gemma_output_paths <- Sys.glob(
  "05_results/16_gemma_ft12/output/no_K/*.assoc.txt"
)
# Drop the file with all F9s combined.
gemma_output_paths <- grep(
  "F9_combined", gemma_output_paths,
  invert = TRUE, value = TRUE
)


gwas <- vector("list", length=length(gemma_output_paths))
names(gwas) <- c("Parents", "F9_cohort_1", "F9_cohort_2")

for(f in 1:length(gwas)){
  gemma_file <- read_tsv(
    gemma_output_paths[f],
    # n_max = 1000,
    col_types = 'cciiiccnnnnnn'
  ) %>%
    mutate(
      log10p = -log10(p_lrt),
      varexp = beta^2 * af * (1-af)
    )
  
  gwas[[f]] <- gemma_file
  
}

# Merge the result files
merge_gwas <- inner_join(
  gwas$Parents, gwas$F9_cohort_1,
  by = c("chr", "ps"),
  suffix = c("_parents", "")
) %>%
  inner_join(
    gwas$F9_cohort_2,
    by = c("chr", "ps"),
    suffix = c("_cohort1", "_cohort2")
  )

```

## Manhattan plots

```{r create-mh}

plot_titles <- c(
  "Parents",
  "F9 cohort 1",
  "F9 cohort 2"
)

mh_plots <- vector('list', length(gemma_output_paths))

for( i in 1:3){
  mh_plots[[i]] <- manhattan_plot(
    chr=gwas[[i]]$chr,
    pos=gwas[[i]]$ps,
    pvalue=gwas[[i]]$p_lrt,
    signif_cutoff = 0.05, fraction_to_keep = 0.01,
    title = plot_titles[i]
  )
}
```

```{r mh-noK, fig.height=20, fig.width=10}
ggarrange(
  mh_plots[[1]],
  mh_plots[[2]],
  mh_plots[[3]],
  nrow = 3, ncol=1
)
```


## P-values

The plot below shows p-values for GWAS for flowering time at 12°C without a K matrix, comparing parents to two cohorts of F9 plants.
P-values are strongly correlated.

```{r cohort-pvals, fig.width=10}

# Spearman rank correlations for p-value distributions
pval_correlations <- c(
  cor(merge_gwas$log10p_parents, merge_gwas$log10p_cohort1, method='s'),
  cor(merge_gwas$log10p_parents, merge_gwas$log10p_cohort2, method='s'),
  cor(merge_gwas$log10p_cohort1, merge_gwas$log10p_cohort2, method='s')
)
pval_correlations <- sapply(pval_correlations, round, 3)


ggpubr::ggarrange(
  merge_gwas %>%
    ggplot(aes(x = log10p_parents, y=log10p_cohort1 )) +
    geom_point()+
    coord_fixed() +
    labs(
      x = "-log10 p (parents)",
      y = "-log10 p (F9 cohort 1)",
      title = "Parents vs F9 cohort 1",
      subtitle = paste("\u03c1 = ", pval_correlations[1])
    ),
  merge_gwas %>%
    ggplot(aes(x = log10p_parents, y=log10p_cohort2 )) +
    geom_point()+
    coord_fixed() +
    labs(
      x = "-log10 p (parents)",
      y = "-log10 p (F9 cohort 2)",
      title = "Parents vs F9 cohort 2",
      subtitle = paste("\u03c1 = ", pval_correlations[2])
    ),
  merge_gwas %>%
    ggplot(aes(x = log10p_cohort1, y=log10p_cohort2 )) +
    geom_point()+
    coord_fixed() +
    labs(
      x = "-log10 p (F9 cohort 1)",
      y = "-log10 p (F9 cohort 2)",
      title = "Cohorts 1 and 2",
      subtitle = paste("\u03c1 = ", pval_correlations[3])
    ),
  
  nrow=1, ncol=3
)

```


```{r qqplot-functions}
# Function to create GWAS QQ plot
qqplot_gwas <- function(pvalues, main="QQ Plot for GWAS", ...) {
    # Remove NAs
    pvalues <- na.omit(pvalues)
    
    # Calculate observed and expected values
    observed <- -log10(sort(pvalues))
    expected <- -log10(ppoints(length(pvalues)))
    
    # Calculate confidence intervals (optional)
    n <- length(pvalues)
    conf <- 0.95  # 95% confidence interval
    df <- data.frame(
        observed = observed,
        expected = expected,
        clower = qbeta(0.025, 1:n, n - 1:n + 1),
        cupper = qbeta(0.975, 1:n, n - 1:n + 1)
    )
    
    # Create plot using ggplot2
    library(ggplot2)
    
    ggplot(df, aes(x=expected, y=observed)) +
        # Add confidence interval
        geom_ribbon(aes(ymin=-log10(clower), ymax=-log10(cupper)), 
                   fill="grey80", alpha=0.5) +
        # Add reference line
        geom_abline(intercept=0, slope=1, color="red", linetype="dashed") +
        # Add observed points
        geom_point() +
        # Labels and theme
        labs(x=expression(Expected~~-log[10](p)), 
             y=expression(Observed~~-log[10](p)),
             title=main) +
        theme_bw()
}

# For multiple GWAS studies/conditions:
qq_plot_multiple <- function(pvalue_list, labels, colors, main="") {
    # Create data frame for plotting
    plot_data <- data.frame()
    
    for(i in 1:length(pvalue_list)) {
        pvals <- na.omit(pvalue_list[[i]])
        observed <- -log10(sort(pvals))
        expected <- -log10(ppoints(length(pvals)))
        
        plot_data <- rbind(plot_data, 
                          data.frame(expected = expected,
                                   observed = observed,
                                   group = labels[i]))
    }
    
    # Create plot
    ggplot(plot_data, aes(x=expected, y=observed, color=group)) +
        geom_abline(intercept=0, slope=1, color="red", linetype="dashed") +
        geom_point(alpha=0.7) +
        scale_color_manual(values=colors) +
        labs(x=expression(Expected~~-log[10](p)), 
             y=expression(Observed~~-log[10](p)),
             title=main) +
        theme_bw() +
        theme(legend.title=element_blank())
}
```

QQ plots look *somewhat* less inflated.

```{r cohort-qqplot}
# For multiple studies/conditions:
pvalue_list <- list(
    parents = merge_gwas$p_lrt_parents,
    cohort1 = merge_gwas$p_lrt_cohort1,
    cohort2 = merge_gwas$p_lrt_cohort2
)

labels <- c("Parents", "F9 cohort 1", "F9 cohort 2")
colors <- c("#1b9e77", "#d95f02", "#7570b3")  # ColorBrewer palette

qq_plot_multiple(pvalue_list, labels, colors)
```

In fact $\lambda$ values are quite different:

- 4.361 for the parents
- 2.078 for cohort 1
- 2.075 for cohort 2

## Effect sizes

The plot below shows effect sizes for of SNPs estimated by GEMMA without a K matrix for flowering time at 12°C, comparing parents to two cohorts of F9 plants.
These effects sizes are even more strongly correlated than were p-values.

```{r cohort-betas, fig.width=10}
# Spearman rank correlations for effect-size distributions
beta_correlations <- c(
  cor(merge_gwas$beta_parents, merge_gwas$beta_cohort1, method='s'),
  cor(merge_gwas$beta_parents, merge_gwas$beta_cohort2, method='s'),
  cor(merge_gwas$beta_cohort1, merge_gwas$beta_cohort2, method='s')
)
beta_correlations <- sapply(beta_correlations, round, 3)



ggpubr::ggarrange(
  merge_gwas %>%
    ggplot(aes(x = beta_parents, y=beta_cohort1 )) +
    geom_point()+
    coord_fixed() +
    labs(
      x = "SNP effect (parents)",
      y = "SNP effect (F9 cohort 1)",
      title = "Parents vs F9 cohort 1",
      subtitle = paste("\u03c1 = ", beta_correlations[1])
    ),
  
  merge_gwas %>%
    ggplot(aes(x = beta_parents, y=beta_cohort2 )) +
    geom_point()+
    coord_fixed() +
    labs(
      x = "SNP effect (parents)",
      y = "SNP effect (F9 cohort 2)",
      title = "Parents vs F9 cohort 2",
      subtitle = paste("\u03c1 = ", beta_correlations[2])
    ),
  
  merge_gwas %>%
    ggplot(aes(x = beta_cohort1, y=beta_cohort2 )) +
    geom_point()+
    coord_fixed() +
    labs(
      x = "SNP effect (F9 cohort 1)",
      y = "SNP effect (F9 cohort 2)",
      title = "Cohorts 1 and 2",
      subtitle = paste("\u03c1 = ", beta_correlations[3])
    ),
  
  nrow=1, ncol=3
)
```

There are no obvious differences in mean or variance of effect sizes.

```{r boxplot-beta}
beta_summary_stats <- tibble(
  cohort = c("Parents", "F9 cohort 1", "F9 cohort 2"),
  mean = c(
    mean(merge_gwas$beta_parents),
    mean(merge_gwas$beta_cohort1),
    mean(merge_gwas$beta_cohort2)
  ),
  st_deviation = c(
    sd(merge_gwas$beta_parents),
    sd(merge_gwas$beta_cohort1),
    sd(merge_gwas$beta_cohort2)
  )
)


merge_gwas %>% 
  select(beta_parents, beta_cohort1, beta_cohort2) %>% 
  rename(
    Parents = beta_parents,
    `F9 cohort 1` = beta_cohort1,
    `F9 cohort 2` = beta_cohort2
  ) %>% 
  pivot_longer(Parents:`F9 cohort 2`, values_to = "Effect size") %>% 
  mutate(
    name = factor(
      name,
      levels = c("Parents", "F9 cohort 1", "F9 cohort 2")
    )
  ) %>% 
  ggplot(aes(x= name, y = `Effect size`)) +
  geom_boxplot() +
  theme_bw() +
  theme(axis.title.x = element_blank())

```
